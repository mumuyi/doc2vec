@Override
	public void run() {
		// User agent is likely to be null, though the AndroidHttpClient
		// seems ok with that.
		String mimeType = null;
		String contentDisposition = null;
		HttpURLConnection connection = null;
		try {
			URL url = new URL(mUri);
			connection = (HttpURLConnection) url.openConnection();
			if (mCookies != null && mCookies.length() > 0) {
				connection.addRequestProperty("Cookie", mCookies);
				connection.setRequestProperty("User-Agent", mUserAgent);
			}
			connection.connect();
			// We could get a redirect here, but if we do lets let
			// the download manager take care of it, and thus trust that
			// the server sends the right mimetype
			if (connection.getResponseCode() == 200) {
				String header = connection.getHeaderField("Content-Type");
				if (header != null) {
					mimeType = header;
					final int semicolonIndex = mimeType.indexOf(';');
					if (semicolonIndex != -1) {
						mimeType = mimeType.substring(0, semicolonIndex);
					}
				}
				String contentDispositionHeader = connection.getHeaderField("Content-Disposition");
				if (contentDispositionHeader != null) {
					contentDisposition = contentDispositionHeader;
				}
			}
		} catch (IllegalArgumentException | IOException ex) {
			if (connection != null)
				connection.disconnect();
		} finally {
			if (connection != null)
				connection.disconnect();
		}

		if (mimeType != null) {
			if (mimeType.equalsIgnoreCase("text/plain")
					|| mimeType.equalsIgnoreCase("application/octet-stream")) {
				String newMimeType = MimeTypeMap.getSingleton().getMimeTypeFromExtension(
						MimeTypeMap.getFileExtensionFromUrl(mUri));
				if (newMimeType != null) {
					mRequest.setMimeType(newMimeType);
				}
			}
			String filename = URLUtil.guessFileName(mUri, contentDisposition, mimeType);
			mRequest.setDestinationInExternalPublicDir(Environment.DIRECTORY_DOWNLOADS, filename);
		}

		// Start the download
		DownloadManager manager = (DownloadManager) mContext
				.getSystemService(Context.DOWNLOAD_SERVICE);
		manager.enqueue(mRequest);
	}