private List<File> scanDir(File dir) {
        String absolutePath = dir.getAbsolutePath();
        if (excludedScanDirs.contains(absolutePath)) {
            Log.d(TAG, String.format("%s is excluded", absolutePath));
            return Collections.emptyList();
        }
        boolean symlink = false;
        try {
            symlink = isSymlink(dir);
        } catch (IOException e) {
            Log.e(TAG,
                    String.format("Failed to check if %s is symlink",
                            dir.getAbsolutePath()));
        }

        if (symlink) {
            Log.d(TAG, String.format("%s is a symlink", absolutePath));
            return Collections.emptyList();
        }

        if (dir.isHidden()) {
            Log.d(TAG, String.format("%s is hidden", absolutePath));
            return Collections.emptyList();
        }
        Log.d(TAG, "Scanning " + absolutePath);
        List<File> candidates = new ArrayList<File>();
        File[] files = dir.listFiles(fileFilter);
        if (files != null) {
            for (int i = 0; i < files.length; i++) {
                File file = files[i];
                if (file.isDirectory()) {
                    candidates.addAll(scanDir(file));
                } else {
                    if (!file.isHidden() && file.isFile()) {
                        candidates.add(file);
                    }
                }
            }
        }
        return candidates;
    }