public static String doGet(Context context, String serviceEndpoint, Properties props)
            throws Exception
    {

        HttpClient httpClient = new StrongHttpsClient(context);

        StringBuilder uriBuilder = new StringBuilder(serviceEndpoint);

        StringBuffer sbResponse = new StringBuffer();

        Enumeration<Object> enumProps = props.keys();
        String key, value = null;

        uriBuilder.append('?');

        while (enumProps.hasMoreElements())
        {
            key = (String) enumProps.nextElement();
            value = (String) props.get(key);
            uriBuilder.append(key);
            uriBuilder.append('=');
            uriBuilder.append(java.net.URLEncoder.encode(value));
            uriBuilder.append('&');

        }

        HttpGet request = new HttpGet(uriBuilder.toString());
        HttpResponse response = httpClient.execute(request);

        int status = response.getStatusLine().getStatusCode();

        // we assume that the response body contains the error message
        if (status != HttpStatus.SC_OK) {
            ByteArrayOutputStream ostream = new ByteArrayOutputStream();
            response.getEntity().writeTo(ostream);
            Log.e("HTTP CLIENT", ostream.toString());

            return null;

        } else {
            InputStream content = response.getEntity().getContent();
            // <consume response>

            BufferedReader reader = new BufferedReader(new InputStreamReader(content));
            String line;

            while ((line = reader.readLine()) != null)
                sbResponse.append(line);

            content.close(); // this will also close the connection
        }

        return sbResponse.toString();

    }